@page "/categoria"
@inject HttpClient  http

@if (categorias == null)
{
    <p><em>Carregando...</em></p>
}
else if (categorias.Length == 0)
{
    <p><em>Não existem categorias cadastradas...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Categoria</th>
                <th>Descrição</th>
                <th>Edita</th>
                <th>Deleta</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var categoria in categorias)
            {
                <tr>
                    <td>@categoria.Nome</td>
                    <td>@categoria.Descricao</td>
                    <td><a class="btn btn-primary" href="categoria/edit/@categoria.CategoriaId">Editar</a> </td>
                    <td><a class="btn btn-danger" @onclick="@(()=> DeletarCategoria(categoria.CategoriaId))">Deletar</a> </td>
                </tr>
            }
        </tbody>
    </table>
}

<Confirma @ref="confirma" onCancela="@CancelaConfirma" onConfirma="@DeletaConfirma">
    <div>Deseja realmente excluir este item ?</div>
</Confirma>

<hr />

<div>
    <a class="btn btn-success" href="categoria/create">Nova Categoria</a>
</div>


@code {

    Categoria[] categorias { get; set; }

    Confirma confirma;

    int codigoCategoria;

    protected override async Task OnInitializedAsync()
    {
        await CarregaCategorias();
    }

    public async Task CarregaCategorias()
    {
        categorias = await http.GetFromJsonAsync<Categoria[]>("/api/categoria");
        //categorias = new Categoria[]
        //{
        //    new Categoria()
        //    {
        //        CategoriaId = 1,
        //        Nome = "Eletrônicos",
        //        Descricao = "Produtos eletrônicos"
        //    },
        //    new Categoria()
        //    {
        //        CategoriaId = 2,
        //        Nome = "Smartphones",
        //        Descricao = "Dispositivos Smartphones"
        //    }
        //};
    }

    void DeletarCategoria(int categoriaId)
    {
        confirma.Exibir();
        codigoCategoria = categoriaId;
    }

    async Task DeletaConfirma()
    {
        await http.DeleteAsync($"api/categoria/{codigoCategoria}");
        confirma.Ocultar();
        await CarregaCategorias();
    }

    void CancelaConfirma()
    {
        confirma.Ocultar();
    }

}
